# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build and Deploy

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
#  setup:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Set up Cloud SDK
#        uses: google-github-actions/setup-gcloud@master
#        with:
#          project_id: ${{ secrets.GCP_PROJECT_ID }}
#          service_account_key: ${{ secrets.SERVICE_ACCOUNT }}
#          export_default_credentials: true
#
#      - name: gcloud info
#        run: gcloud info
#
#      - name: configure-docker
#        run: gcloud auth configure-docker europe-west2-docker.pkg.dev
#
#      - name: configure-docker info
#        run: gcloud auth configure-docker

  build:
#    needs: [setup]
    runs-on: ubuntu-latest
    steps:
#      - name: Set up Cloud SDK
#        uses: google-github-actions/setup-gcloud@master
#        with:
#          project_id: ${{ secrets.GCP_PROJECT_ID }}
#          service_account_key: ${{ secrets.SERVICE_ACCOUNT }}
#          export_default_credentials: true
#
#      - name: gcloud info
#        run: gcloud info
#
#      - name: configure-docker
#        run: gcloud auth configure-docker europe-west2-docker.pkg.dev
#
#      - name: configure-docker info
#        run: gcloud auth configure-docker
#
#      - uses: actions/checkout@v2
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#
#      - name: Clean
#        run: ./gradlew clean
#
#      - name: Build
#        run: ./gradlew build
#
#      - name: Deploy to docker registery
#        run: ./gradlew jib --image=europe-west2-docker.pkg.dev/dev-env-309121/test-repo/kotlin-spring-boot-graphql-api
#
      - name: Setup kubectl
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_FILE }}
        with:
          args: get pods




#      - name: Set GCP_PROJECT
#        env:
#          GCP_PROJECT: ${{ secrets.PROJECT_ID }}
#        run: gcloud --quiet config set project ${GCP_PROJECT}

#      - name: setup registery
#        run: gcloud auth configure-docker europe-west2-docker.pkg.dev


#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - name: Clean with Gradle
#        run: ./gradlew clean
#      - name: Build with Gradle
#        run: ./gradlew build
#      - name: Deploy with Gradle
#        run: ./gradlew jib --image=europe-west2-docker.pkg.dev/dev-env-309121/test-repo/kotlin-spring-boot-graphql-ap

#  test:
#    needs: [build]
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - name: Integration Tests
#        run: mvn -B test --file pom.xml

#  deploy:
#    needs: [build, test]
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#      - uses: google-github-actions/setup-gcloud@master
#        with:
#          version: '290.0.1'
#          project_id: ${{ secrets.GCP_PROJECT_ID }}
#          service_account_key: ${{ secrets.SERVICE_ACCOUNT }}
#          export_default_credentials: true
#
#      - name: GCP Authenticate
#        uses: google-github-actions/setup-gcloud@master
#        with:
#          version: "273.0.0"
#          service_account_key: ${{ secrets.SERVICE_ACCOUNT }}
#
#
#      - name: Set GCP_PROJECT
#        env:
#          GCP_PROJECT: ${{ secrets.PROJECT_ID }}
#        run: gcloud --quiet config set project ${GCP_PROJECT}
#
#      - name: Deploy to GAE
#        run: mvn -B -DskipTests clean package appengine:deploy --file pom.xml



